rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Chat file uploads - only during active consultations
    match /chat-files/{bookingId}/{allPaths=**} {
      allow read, write: if request.auth != null 
        && (request.auth.token.bookingId == bookingId)
        && (request.auth.token.role == 'USER' || request.auth.token.role == 'VETPARTNER')
        && request.auth.token.exp > request.time.seconds()
        && resource.size < 10 * 1024 * 1024; // 10MB limit
    }
  }
}

//NEW

rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Chat file uploads - only for authorized participants in the chat room
    match /chat-files/{chatRoomId}/{fileId} {
      // Function to check if user is a participant in the chat room
      function isChatRoomParticipant() {
        let chatRoom = get(/databases/$(database)/documents/chatRooms/$(chatRoomId)).data;
        return request.auth != null
          && request.auth.token.chatRoomId == chatRoomId
          && (request.auth.token.role == 'STUDENT' || request.auth.token.role == 'MEMBER')
          && request.auth.token.exp > request.time.seconds()
          && (
            (request.auth.token.role == 'STUDENT' && chatRoom.studentId == request.auth.uid) ||
            (request.auth.token.role == 'MEMBER' && chatRoom.memberId == request.auth.uid)
          );
      }

      allow read: if isChatRoomParticipant();

      allow write: if isChatRoomParticipant()
        && request.resource.size < 10 * 1024 * 1024 // 10MB limit
        && request.resource.contentType.matches('image/.*|application/pdf|text/plain'); // Restrict file types
    }
  }
}